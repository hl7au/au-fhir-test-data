map "http://example.org/StructureMap/CSV2Observation" = "CSV2Observation"

uses "http://example.org/StructureDefinition/ObservationCSV" as source
uses "http://hl7.org/fhir/StructureDefinition/Observation" as target

group ToObservation(source src : ObservationCSV, target tgt : Observation) {

    // id
    src.id as s_id where length() > 0 -> tgt.id = s_id; 

    // meta.profile
    src -> tgt.meta = create('Meta') as meta then {
        src.profile1 as s_profile where length() > 0 -> meta.profile = s_profile;
        src.profile2 as s_profile where length() > 0 -> meta.profile = s_profile;
    };

    // partOf 0..* MS
    src.partOf_reference_id as s_reference_id where length() > 0 -> tgt.partOf as t_partOf first then {
        src.partOf_reference_type as s_reference_type -> t_partOf.reference = append(s_reference_type, '/', s_reference_id);
    };

    // status: code
    src.status as s_status where length() > 0 -> tgt.status = s_status;
    // missing status
    src.status as s_status where length() = 0 -> tgt.status = 'unknown';

    // category 1..* MS
    src.category1_coding1_code as s_category -> tgt.category as t_category first then {
        src.category1_coding1_system as s_system -> t_category.coding = c(s_system, s_category) as t_coding first then {
            src.category1_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.category1_text as s_text where length() > 0 -> t_category.text = s_text;
    };

    src.category2_coding1_code as s_category where length() > 0 -> tgt.category as t_category first then {
        src.category2_coding1_system as s_system -> t_category.coding = c(s_system, s_category) as t_coding first then {
            src.category2_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.category2_text as s_text where length() > 0 -> t_category.text = s_text;
    };

    // code 1..1 MS
    src.code_coding1_code as s_coding1 where length() > 0 -> tgt.code as t_code then {
        s_coding1 where length() > 0 -> t_code then {
            src.code_coding1_system as coding1_system -> t_code.coding = c(coding1_system, s_coding1) as t_coding first then {
                src.code_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
            };

            //src.code_coding2_code as s_coding2 where length() > 0 -> t_code.coding = c(src.code_coding2_system, s_coding2) as t_coding first then {
            src.code_coding2_code as s_coding2 where length() > 0 -> t_code then {
                src.code_coding2_system as coding2_system -> t_code.coding = c(coding2_system, s_coding2) as t_coding first then {
                    src.code_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
            };
        };
        src.code_text as s_text where length() > 0 -> t_code.text = s_text;
    };

    // code coding missing
    src.code_coding1_code where length() = 0 -> tgt.code as t_code then {
        // text only 
        src.code_text as s_text where length() > 0 -> t_code.text = s_text;
        // code missing
        src.code_text where length() = 0 -> t_code.coding = c('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'unknown');
    };

    // subject 1..1 MS
    src.subject_reference_id as s_reference where length() > 0 -> tgt.subject as t_subject then {
        s_reference -> t_subject.reference = append('Patient/', s_reference);

        src.subject_identifier_value as s_identifier where length() > 0 -> t_subject.identifier as t_identifier then {
            s_identifier -> t_identifier.value = s_identifier;
            src.subject_identifier_system as s_system where length() > 0 -> t_identifier.system = s_system;
            src.subject_identifier_type as s_type where length() > 0 -> t_identifier.type as t_type then {
                s_type -> t_type.coding = c('http://terminology.hl7.org/CodeSystem/v2-0203', s_type) as t_coding first then {
                    src.subject_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
                src.subject_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
            };
        };
        src.subject_display as s_display where length() > 0 -> t_subject.display = s_display;
    };

    // subject suppressed
    src.subject_reference_id where length() = 0 -> tgt.subject as t_subject then {
        src -> t_subject.extension as t_extension first then {
            src -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            t_extension.value = cast('masked', 'code');
      };
    };

    // encounter 0..1 MS
    src.encounter_reference_id as s_reference where length() > 0 -> tgt.encounter as t_encounter then {
        s_reference -> t_encounter.reference = append('Encounter/', s_reference);
        src.encounter_display as s_display where length() > 0 -> t_encounter.display = s_display;
    };

    src.encounter_reference_id as s_reference where length() = 0 -> tgt then {
        src.encounter_display as s_display where length() > 0 -> tgt.encounter as t_encounter then {
            s_display -> t_encounter.display = s_display;
        };
    };

    // effective 1..1 MS
    // effectiveDateTime
    src.effectiveDateTime as s_effective where length() > 0 -> tgt.effective = cast(s_effective, 'dateTime');

    // missing effective
    src.effectiveDateTime where length() = 0 -> tgt.effective = create('dateTime') as t_effectiveDateTime then {
        src -> t_effectiveDateTime.extension as t_extension first then {
            src -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            t_extension.value = cast('unknown', 'code');
        };
    };

    // performer 0..* MS
    src.performer1_reference_id as s_reference_id where length() > 0 -> tgt.performer as t_performer then {
        src.performer1_reference_type as s_reference_type -> t_performer.reference = append(s_reference_type, '/', s_reference_id);

        src.performer1_identifier_value as s_identifier where length() > 0 -> t_performer.identifier as t_identifier then {
            s_identifier -> t_identifier.value = s_identifier;
            src.performer1_identifier_system as s_system where length() > 0 -> t_identifier.system = s_system;
            src.performer1_identifier_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
                s_type -> t_type.coding = c('http://terminology.hl7.org/CodeSystem/v2-0203', s_type) as t_coding first then {
                    src.performer1_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
                src.performer1_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
            };
        };
    };

    // value 0..1 MS
    // valueQuantity
    src.valueQuantity_value as s_value where length() > 0 -> tgt.value = create('Quantity') as t_quantity then {
        s_value -> t_quantity.value = s_value;
        src.valueQuantity_unit as s_unit where length() > 0 -> t_quantity.unit = s_unit;
        src.valueQuantity_system as s_system where length() > 0 -> t_quantity.system = s_system;
        src.valueQuantity_code as s_code where length() > 0 -> t_quantity.code = s_code;
    };

    // valueCodeableConcept
    src.valueCodeableConcept_coding1_code as s_code where length() > 0 -> tgt.value = create('CodeableConcept') as t_codeableConcept then {
        src.valueCodeableConcept_coding1_system as s_system -> t_codeableConcept.coding = c(s_system, s_code) as t_coding first then {
            src.valueCodeableConcept_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.valueCodeableConcept_coding2_code as s_code where length() > 0 -> t_codeableConcept then {
            src.valueCodeableConcept_coding2_system as s_system -> t_codeableConcept.coding = c(s_system, s_code) as t_coding first then {
                src.valueCodeableConcept_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };
        src.valueCodeableConcept_text as s_text where length() > 0 -> t_codeableConcept.text = s_text;
    };

    src.valueQuantity_value where length() = 0 -> tgt then {
        src.hasMember1_reference where length() = 0 -> tgt then {
            src.component1_code_coding1_code where length() = 0 -> tgt then {
                src.valueCodeableConcept_coding1_code where length() = 0 -> tgt.value = create('CodeableConcept') as t_codeableConcept then {
                    src -> t_codeableConcept.coding = c('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'unknown');
                };
            };
        };
    };

    // dataAbsentReason 0..1 MS
    // TODO

    // interpretation 0..*
    src.interpretation1_coding1_code as s_code where length() > 0 -> tgt.interpretation as t_codeableConcept then {
        src.interpretation1_coding1_system as s_system -> t_codeableConcept.coding = c(s_system, s_code) as t_coding first then {
            src.interpretation1_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.interpretation1_text as s_text -> t_codeableConcept.text = s_text;
    };


    // note 0..* MS
    src.note_text as s_note where length() > 0 -> tgt.note as t_note first then {
        s_note -> t_note.text = s_note;
    };

    // bodySite 0..1
    src.bodySite_coding1_code as s_code where length() > 0 -> tgt.bodySite as t_bodySite then {
        s_code where length() > 0 -> t_bodySite then {
            src.bodySite_coding1_system as s_system -> t_bodySite.coding = c(s_system, s_code) as t_coding first then {
                src.bodySite_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };
        src.bodySite_text as s_text where length() > 0 -> t_bodySite.text = s_text;
    };

    // referenceRange 0..*
    src.referenceRange1_high_value as s_high_value -> tgt then {
        src.referenceRange1_low_value as s_low_value where length() > 0 -> tgt.referenceRange as t_referenceRange then {
            s_low_value -> t_referenceRange.low = create('simpleQuantity') as t_low then {
                s_low_value -> t_low.value = s_low_value;
                src.referenceRange1_low_unit as s_unit where length() > 0 -> t_low.unit = s_unit;
                src.referenceRange1_low_system as s_system where length() > 0 -> t_low.system = s_system;
                src.referenceRange1_low_code as s_code where length() > 0 -> t_low.code = s_code;
            };
            s_high_value where length() > 0 -> t_referenceRange.high = create('simpleQuantity') as t_high then {
                s_high_value -> t_high.value = s_high_value;
                src.referenceRange1_high_unit as s_unit where length() > 0 -> t_high.unit = s_unit;
                src.referenceRange1_high_system as s_system where length() > 0 -> t_high.system = s_system;
                src.referenceRange1_high_code as s_code where length() > 0 -> t_high.code = s_code;
            };
            src.referenceRange1_type_text as s_text where length() > 0 -> t_referenceRange.type as t_type then {
                s_text -> t_type.text = s_text;
            };
        };
        src.referenceRange1_low_value as s_low_value where length() = 0 -> tgt then {
            s_high_value where length() > 0 -> tgt.referenceRange as t_referenceRange then {
                s_high_value -> t_referenceRange.high = create('simpleQuantity') as t_high then {
                    s_high_value -> t_high.value = s_high_value;
                    src.referenceRange1_high_unit as s_unit where length() > 0 -> t_high.unit = s_unit;
                    src.referenceRange1_high_system as s_system where length() > 0 -> t_high.system = s_system;
                    src.referenceRange1_high_code as s_code where length() > 0 -> t_high.code = s_code;
                };
            };
        };
    };

    // hasMember 0..* MS
    src.hasMember1_reference as s_reference where length() > 0 -> tgt.hasMember as t_hasMember first then {
        s_reference -> t_hasMember.reference = s_reference;   
    };
    src.hasMember2_reference as s_reference where length() > 0 -> tgt.hasMember as t_hasMember first then {
        s_reference -> t_hasMember.reference = s_reference;   
    };

    // component 0..*    
    src.component1_code_coding1_code as s_component_code where length() > 0 -> tgt.component as t_component first then {
        // code 1..1
        src.component1_code_coding1_system as s_system -> t_component.code as t_code then {
            s_system -> t_code.coding = c(s_system, s_component_code) as t_coding first then {
                src.component1_code_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.component1_code_coding2_code as s_code where length() > 0 -> t_component then {
                src.component1_code_coding2_system as s_system -> t_code.coding = c(s_system, s_code) as t_coding first then {
                    src.component1_code_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
            };
            src.component1_code_text as s_text where length() > 0 -> t_code.text = s_text;
        };

        // value 0..1
        // valueQuantity
        src.component1_valueQuantity_value as s_value where length() > 0 -> t_component.value = create('Quantity') as t_quantity then {
            s_value -> t_quantity.value = s_value;
            src.component1_valueQuantity_unit as s_unit where length() > 0 -> t_quantity.unit = s_unit;
            src.component1_valueQuantity_system as s_system where length() > 0 -> t_quantity.system = s_system;
            src.component1_valueQuantity_code as s_code where length() > 0 -> t_quantity.code = s_code;
        };

    };
    
    src.component2_code_coding1_code as s_component_code where length() > 0 -> tgt.component as t_component first then {
        // code 1..1
        src.component2_code_coding1_system as s_system -> t_component.code as t_code then {
            s_system -> t_code.coding = c(s_system, s_component_code) as t_coding first then {
                src.component2_code_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.component2_code_coding2_code as s_code where length() > 0 -> t_component then {
                src.component2_code_coding2_system as s_system -> t_code.coding = c(s_system, s_code) as t_coding first then {
                    src.component2_code_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
            };
            src.component2_code_text as s_text where length() > 0 -> t_code.text = s_text;
        };

        // value 0..1
        // valueQuantity
        src.component2_valueQuantity_value as s_value where length() > 0 -> t_component.value = create('Quantity') as t_quantity then {
            s_value -> t_quantity.value = s_value;
            src.component2_valueQuantity_unit as s_unit where length() > 0 -> t_quantity.unit = s_unit;
            src.component2_valueQuantity_system as s_system where length() > 0 -> t_quantity.system = s_system;
            src.component2_valueQuantity_code as s_code where length() > 0 -> t_quantity.code = s_code;
        };

    };
}