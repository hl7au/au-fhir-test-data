map "http://example.org/StructureMap/CSV2Organization" = "CSV2Organization"

uses "http://example.org/StructureDefinition/OrganizationCSV" as source
uses "http://hl7.org/fhir/StructureDefinition/Organization" as target

//uses "http://hl7.org/fhir/StructureDefinition/Identifier" as target

group ToOrganization(source src : OrganizationCSV, target tgt : Organization) {

    // id
    src.id as s_id where length() > 0 -> tgt.id = s_id; // ""rule_id"";

    src -> tgt.meta = create('Meta') as meta then {
        src -> meta.profile = 'http://hl7.org.au/fhir/core/StructureDefinition/au-core-organization';
    };

    // identifier 0..* MS
    src.identifier1_value as s_value where length() > 0 -> tgt.identifier as t_identifier first then {
        s_value -> t_identifier.value = s_value;
        src.identifier1_system as s_system where length() > 0 -> t_identifier.system = s_system;

        src.identifier1_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
            s_type -> t_type.coding as t_coding first then {
                s_type -> t_coding.code = s_type, 
                    t_coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203';
                s_type where $this = 'NOI' -> t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
//                src.identifier1_type_system as s_type_system where length() > 0 -> t_coding.system = s_type_system;
                src.identifier1_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.identifier1_type_text as s_text where length() > 0 -> t_type.text = s_text;
        };
    };

    src.identifier2_value as s_value where length() > 0 -> tgt.identifier as t_identifier first then {
        s_value -> t_identifier.value = s_value;
        src.identifier2_system as s_system where length() > 0 -> t_identifier.system = s_system;

        src.identifier2_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
            s_type -> t_type.coding as t_coding first then {
                s_type -> t_coding.code = s_type, 
                    t_coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203';            
                s_type where $this = 'NOI' -> t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
//                src.identifier2_type_system as s_type_system where length() > 0 -> t_coding.system = s_type_system;
                src.identifier2_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.identifier2_type_text as s_text where length() > 0 -> t_type.text = s_text;
        };
    };

    // active
    src.active as s_active where length() > 0 -> tgt.active = s_active;

    // type 0..* MS
    src.type_coding1_code as s_type where length() > 0 -> tgt.type as t_type then {
        src.type_coding1_system as s_type_system -> t_type.coding = c(s_type_system, s_type) as t_coding first then { 
            src.type_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.type_coding2_code as s_type where length() > 0 -> t_type then {
            src.type_coding2_system as s_type_system -> t_type.coding = c(s_type_system, s_type) as t_coding first then { 
                src.type_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };
        src.type_text as s_text where length() > 0 -> t_type.text = s_text;
    };

    // name 1..1 MS
    src.name as s_name where length() > 0 -> tgt.name = s_name;
  
    src.name where length() = 0 -> tgt.name as t_name then {
        src -> t_name.extension as t_extension first then {
            src -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            t_extension.value = cast('unknown', 'code');
      };
    };

    // alias 0..* MS
    src.alias as s_alias where length() > 0 -> tgt.alias = s_alias;

    // telecom 0..* MS
    src.telecom1_value as s_telecom_value where length() > 0 -> tgt.telecom as t_telecom first then {
        s_telecom_value -> t_telecom.value = s_telecom_value; 
        src.telecom1_use as s_use where length() > 0 -> t_telecom.use = s_use;
        src.telecom1_system as s_system where length() > 0 -> t_telecom.system = s_system;
    };

    src.telecom2_value as s_telecom_value where length() > 0 -> tgt.telecom as t_telecom first then {
        s_telecom_value -> t_telecom.value = s_telecom_value; 
        src.telecom2_use as s_use where length() > 0 -> t_telecom.use = s_use;
        src.telecom2_system as s_system where length() > 0 -> t_telecom.system = s_system;
    };

    // address 0..* MS
    src.address1_city as s_city where length() > 0 -> tgt.address as t_address first then {
        s_city -> t_address.city = s_city;

        // address text
        src.address1_text as s_text where length() > 0 -> t_address.text = s_text;

        // address use
        src.address1_use as s_use where length() > 0 -> t_address.use = s_use;

        // address lines
        src.address1_line1 as s_line1 where length() > 0 -> t_address.line = s_line1 then {
            src.address1_line2 as s_line2 where length() > 0 -> t_address.line = s_line2;
        };

        // address postalCode
        src.address1_postalCode as s_postalCode where length() > 0 -> t_address.postalCode = s_postalCode;

        // address state
        src.address1_state as s_state where length() > 0 -> t_address.state = s_state;

        // address country
        src.address1_country as s_country where length() > 0 -> t_address.country = s_country;
    };

    // partOf 0..1
    src.partOf_reference_id as s_partOf where length() > 0 -> tgt.partOf as t_partOf then {
        src.partOf_reference_type as s_reference_type -> t_partOf.reference = append(s_reference_type, '/', s_partOf);
    };
};