map "http://example.org/StructureMap/CSV2Encounter" = "CSV2Encounter"

uses "http://example.org/StructureDefinition/EncounterCSV" as source
uses "http://hl7.org/fhir/StructureDefinition/Encounter" as target

group ToEncounter(source src : EncounterCSV, target tgt : Encounter) {

    // id
    src.id as s_id where length() > 0 -> tgt.id = s_id; 

    // meta.profile
    src -> tgt.meta = create('Meta') as meta then {
        src -> meta.profile = 'http://hl7.org.au/fhir/core/StructureDefinition/au-core-encounter';
    };

    // status: code 1..1 MS
    src.status as s_status where length() > 0 -> tgt.status = s_status;
    // missing status
    src.status as s_status where length() = 0 -> tgt.status = 'unknown';

    // class: Coding 1..1 MS
    src.class_code as s_class where length() > 0 -> tgt.class as t_class then {
        s_class -> t_class.code = s_class;
        src.class_system as s_system -> t_class.system = s_system;
        src.class_display as s_display where length() > 0 -> t_class.display = s_display;
    };

    // missing class
    src.class_code as s_class where length() = 0 -> tgt.class = c('http://terminology.hl7.org/CodeSystem/data-absent-reason', 'unknown');

    // type
    src.type_code as s_type where length() > 0 -> tgt.type as t_type then {
        src.type_system as s_system -> t_type.coding = c(s_system, s_type) as t_coding first then {
            src.type_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.type_text as s_text where length() > 0 -> t_type.text = s_text;
    };

    // serviceType
    src.serviceType_code as s_serviceType where length() > 0 -> tgt.serviceType as t_serviceType then {
        src.serviceType_system as s_system -> t_serviceType.coding = c(s_system, s_serviceType) as t_coding first then {
            src.serviceType_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.serviceType_text as s_text where length() > 0 -> t_serviceType.text = s_text;
    };

    // subject
    src.subject_reference_id as s_subject_id where length() > 0 -> tgt.subject as t_subject then {
        src.subject_reference_type as s_subject_type where length() > 0 -> t_subject.reference = append(s_subject_type, '/', s_subject_id);
        src.subject_reference_type as s_subject_type where length() = 0 -> t_subject.reference = append('Patient/', s_subject_id);

        src.subject_identifier_value as s_identifier where length() > 0 -> t_subject.identifier as t_identifier then {
            s_identifier -> t_identifier.value = s_identifier;
            src.subject_identifier_system as s_system where length() > 0 -> t_identifier.system = s_system;
            src.subject_identifier_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
                s_type -> t_type.coding = c('http://terminology.hl7.org/CodeSystem/v2-0203', s_type) as t_coding first then {
                    src.subject_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
                src.subject_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
            };
        };
    };

    // subject suppressed
    src.subject_reference_id as s_reference where length() = 0 -> tgt.subject as t_subject then {
        s_reference -> t_subject.extension as t_extension first then {
            s_reference -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            t_extension.value = cast('masked', 'code');
      };
    };

    // participant
    src.participant1_type_code as s_participant_type where length() > 0 -> tgt.participant as t_participant then {
        
        s_participant_type -> t_participant.type as t_type then {
            src.participant1_type_system as s_system -> t_type.coding = c(s_system, s_participant_type) as t_coding first then {
                src.participant1_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };

        s_participant_type -> t_participant.individual as t_individual then {
            src.participant1_individual_reference_id as s_individual_id where length() > 0 -> t_individual then {
                src.participant1_individual_reference_type as s_individual_type where length() > 0 -> t_individual.reference = append(s_individual_type, '/', s_individual_id);
            };

            src.participant1_individual_identifier_value as s_identifier where length() > 0 -> t_individual.identifier as t_identifier then {
                s_identifier -> t_identifier.value = s_identifier;
                src.participant1_individual_identifier_system as s_system where length() > 0 -> t_identifier.system = s_system;
                src.participant1_individual_identifier_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
                    s_type -> t_type.coding = c('http://terminology.hl7.org/CodeSystem/v2-0203', s_type) as t_coding first then {
                        src.participant1_individual_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                    };
                    src.participant1_individual_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
                };
                src.participant1_individual_identifier_assigner_display as s_assigner where length() > 0 -> t_identifier.assigner as t_assigner then {
                    s_assigner -> t_assigner.display = s_assigner;
                };
            };
        };
    };

    src.participant2_type_code as s_participant_type where length() > 0 -> tgt.participant as t_participant then {
        
        s_participant_type -> t_participant.type as t_type then {
            src.participant2_type_system as s_system -> t_type.coding = c(s_system, s_participant_type) as t_coding first then {
                src.participant2_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };

        s_participant_type -> t_participant.individual as t_individual then {
            src.participant2_individual_reference_id as s_individual_id where length() > 0 -> t_individual then {
                src.participant2_individual_reference_type as s_individual_type where length() > 0 -> t_individual.reference = append(s_individual_type, '/', s_individual_id);
            };

            src.participant2_individual_identifier_value as s_identifier where length() > 0 -> t_individual.identifier as t_identifier then {
                s_identifier -> t_identifier.value = s_identifier;
                src.participant2_individual_identifier_system as s_system where length() > 0 -> t_identifier.system = s_system;
                src.participant2_individual_identifier_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
                    s_type -> t_type.coding = c('http://terminology.hl7.org/CodeSystem/v2-0203', s_type) as t_coding first then {
                        src.participant2_individual_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                    };
                    src.participant2_individual_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
                };
                src.participant2_individual_identifier_assigner_display as s_assigner where length() > 0 -> t_identifier.assigner as t_assigner then {
                    s_assigner -> t_assigner.display = s_assigner;
                };
            };
        };
    };

    // period
    src.period_start as s_start -> tgt.period as t_period then {
        s_start where length() > 0 -> t_period.start = cast(s_start, 'dateTime');
        src.period_end as s_end where length() > 0 -> t_period.end = cast(s_end, 'dateTime');
    };

    // reasonCode
    src.reasonCode_code as s_reasonCode where length() > 0 -> tgt.reasonCode as t_reasonCode then {
        src.reasonCode_system as s_system -> t_reasonCode.coding = c(s_system, s_reasonCode) as t_coding first then {
            src.reasonCode_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.reasonCode_text as s_text where length() > 0 -> t_reasonCode.text = s_text;
    };

    // reasonReference
    src.reasonReference_reference_id as s_reason_id where length() > 0 -> tgt.reasonReference as t_reason then {
        src.reasonReference_reference_type as s_reference_type -> t_reason.reference = append(s_reference_type, '/', s_reason_id);
    };

    // dischargeDisposition
    src.dischargeDisposition_coding1_code as s_dischargeDisposition where length() > 0 -> tgt.hospitalization as t_hospitalization then {
        s_dischargeDisposition -> t_hospitalization.dischargeDisposition as t_dischargeDisposition then {
            src.dischargeDisposition_coding1_system as s_system -> t_dischargeDisposition.coding = c(s_system, s_dischargeDisposition) as t_coding first then {
                src.dischargeDisposition_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
            };

            src.dischargeDisposition_coding2_code as s_coding where length() > 0 -> t_dischargeDisposition then {
                src.dischargeDisposition_coding2_system as s_system -> t_dischargeDisposition.coding = c(s_system, s_coding) as t_coding first then {
                    src.dischargeDisposition_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
            };
            src.dischargeDisposition_text as s_text where length() > 0 -> t_dischargeDisposition.text = s_text;
        };
    };

    // location
    src.location_reference_id as s_location_id where length() > 0 -> tgt.location as t_locations first then {
        src.location_reference_type as s_reference_type -> t_locations.location as t_location then {
            s_reference_type -> t_location.reference = append(s_reference_type, '/', s_location_id);
        };
    };

    // serviceProvider
    src.serviceProvider_reference_id as s_serviceProvider_id where length() > 0 -> tgt.serviceProvider as t_serviceProvider then {
        src.serviceProvider_reference_type as s_reference_type -> t_serviceProvider.reference = append(s_reference_type, '/', s_serviceProvider_id);
    };
    // TODO: support when serviceProvider has reference and display
    src.serviceProvider_display as s_serviceProvider_display where length() > 0 -> tgt.serviceProvider as t_serviceProvider then {
        s_serviceProvider_display -> t_serviceProvider.display = s_serviceProvider_display;
    };

    // description
    src.description as s_description where length() > 0 -> tgt.extension as t_extension first then {
        s_description -> t_extension.url = 'http://hl7.org.au/fhir/StructureDefinition/encounter-description',
            t_extension.value = s_description;
    };

}