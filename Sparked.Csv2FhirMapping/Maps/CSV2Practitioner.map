map "http://example.org/StructureMap/CSV2Practitioner" = "CSV2Practitioner"

uses "http://example.org/StructureDefinition/PractitionerCSV" as source
uses "http://hl7.org/fhir/StructureDefinition/Practitioner" as target

group ToPractitioner(source src : PractitionerCSV, target tgt : Practitioner) {

    // id
    src.id as s_id where length() > 0 -> tgt.id = s_id;

    src -> tgt.meta = create('Meta') as meta then {
        src -> meta.profile = 'http://hl7.org.au/fhir/core/StructureDefinition/au-core-practitioner';
    };

    // identifier 0..* MS
    src.identifier1_value as s_value where length() > 0 -> tgt.identifier as t_identifier first then {
        s_value -> t_identifier.value = s_value;
        src.identifier1_system as s_system where length() > 0 -> t_identifier.system = s_system;

        src.identifier1_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
            s_type -> t_type.coding as t_coding first then {
                s_type -> t_coding.code = s_type, 
                    t_coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203';
                s_type where $this = 'PRES' -> t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
                src.identifier1_type_system as s_type_system where length() > 0 -> t_coding.system = s_type_system;
                src.identifier1_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.identifier1_type_text as s_text where length() > 0 -> t_type.text = s_text;
        };
    };

    src.identifier2_value as s_value where length() > 0 -> tgt.identifier as t_identifier first then {
        s_value -> t_identifier.value = s_value;
        src.identifier2_system as s_system where length() > 0 -> t_identifier.system = s_system;

        src.identifier2_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
            s_type -> t_type.coding as t_coding first then {
                s_type -> t_coding.code = s_type, 
                    t_coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203';            
                s_type where $this = 'PRES' -> t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
                src.identifier2_type_system as s_type_system where length() > 0 -> t_coding.system = s_type_system;
                src.identifier2_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.identifier2_type_text as s_text where length() > 0 -> t_type.text = s_text;
        };
    };

    // active 0..1
    src.active as s_active where length() > 0 -> tgt.active = s_active;

    // name 1..1 MS
    src.name1_family as s_name_family where length() > 0 or src.name1_text.length() > 0 -> tgt.name as t_name first then {
        s_name_family where length() > 0 -> t_name.family = s_name_family; 
        src.name1_text as s_name_text where length() > 0 -> t_name.text = s_name_text;
//        src.name1_use as s_use where length() > 0 -> t_name.use = s_use;
        src.name1_given1 as s_name_given where length() > 0 -> t_name.given = s_name_given;
        src.name1_prefix1 as s_name_prefix where length() > 0 -> t_name.prefix = s_name_prefix;
        src.name1_suffix1 as s_name_suffix where length() > 0 -> t_name.suffix = s_name_suffix;
    };

    // missing name (family)
    src.name1_family as s_name_family where length() = 0 and src.name1_text.length() = 1 -> tgt.name as t_name first then {
        src -> t_name.family as t_family then { 
            src -> t_family.extension as t_extension first then {
                src -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                t_extension.value = cast('masked', 'code');
            };
        };
    };
  
    // telecom 0..* MS
    src.telecom1_value as s_telecom_value where length() > 0 -> tgt.telecom as t_telecom first then {
        s_telecom_value -> t_telecom.value = s_telecom_value; 
        src.telecom1_use as s_use where length() > 0 -> t_telecom.use = s_use;
        src.telecom1_system as s_system where length() > 0 -> t_telecom.system = s_system;
    };

    src.telecom2_value as s_telecom_value where length() > 0 -> tgt.telecom as t_telecom first then {
        s_telecom_value -> t_telecom.value = s_telecom_value; 
        src.telecom2_use as s_use where length() > 0 -> t_telecom.use = s_use;
        src.telecom2_system as s_system where length() > 0 -> t_telecom.system = s_system;
    };

    // address 0..* MS
    src.address1_city as s_city where length() > 0 -> tgt.address as t_address first then {
        s_city -> t_address.city = s_city;

        // address text
        src.address1_text as s_text where length() > 0 -> t_address.text = s_text;

        // address use
        src.address1_use as s_use where length() > 0 -> t_address.use = s_use;

        // address lines
        src.address1_line1 as s_line1 where length() > 0 -> t_address.line = s_line1 then {
            src.address1_line2 as s_line2 where length() > 0 -> t_address.line = s_line2;
        };

        // address postalCode
        src.address1_postalCode as s_postalCode where length() > 0 -> t_address.postalCode = s_postalCode;

        // address state
        src.address1_state as s_state where length() > 0 -> t_address.state = s_state;

        // address country
        src.address1_country as s_country where length() > 0 -> t_address.country = s_country;
    };

    // gender
    src.gender as gender where length() > 0 -> tgt.gender = gender;

    // qualification 0..* MS
    
    // the following or always return true - this is a known problem which I need to follow up with Brian about. 
    // This kind of condition is used in various places but not causing issues as yet, but will not be correct.
    //src.qualification1_code_code as s_qualification_code where length() > 0 or src.qualification1_code_text.length() > 0 -> tgt.qualification as t_qualification then {
    // below is a workaround, but not very maintainable
    src.qualification1_code_code as s_qualification_code -> tgt then {

        // when qualification code display only
        s_qualification_code where length() = 0 -> tgt then {
            src.qualification1_code_text as s_text where length() > 0 -> tgt.qualification as t_qualification then {

                // ahpraProfession-details 0..1
                src.qualification1_ahpraProfessionDetails_Profession_text as s_profession_text where length() > 0 -> t_qualification.extension as t_extension first then {
                    s_profession_text -> t_extension.url = 'http://hl7.org.au/fhir/StructureDefinition/ahpraprofession-details',
                        t_extension.extension as t_ahpraProfession first then {
                            s_profession_text -> t_ahpraProfession.url = 'ahpraProfession',
                            t_ahpraProfession.value = create('CodeableConcept') as t_value then {
                                s_profession_text -> t_value.text = s_profession_text;
                            };
                        };
                };

                // identifier 0..* MS
                src.qualification1_identifier_value as s_value where length() > 0 -> t_qualification.identifier as t_identifier first then {
                    s_value -> t_identifier.value = s_value;
                    src.qualification1_identifier_system as s_system -> t_identifier.system = s_system;

                    src.qualification1_identifier_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
                        s_type -> t_type.coding as t_coding first then {
                            s_type -> t_coding.code = s_type, 
                                t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
                            src.qualification1_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                        };
                        src.qualification1_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
                    };
                };

                // code 1..1 MS
                s_text -> t_qualification.code as t_code then {
                    s_text -> t_code.text = s_text;
                };

                //period 0..1 MS
                src.period_start as s_period_start where length() > 0 -> t_qualification.period as t_period then {
                    s_period_start -> t_period.start = s_period_start;
                };

                //issuer 0..1 MS
                src.issuer_display as s_issuer where length() > 0 -> t_qualification.issuer as t_issuer then {
                    s_issuer -> t_issuer.display = s_issuer;
                };
            };
        };

        // s_qualification_code exists
        s_qualification_code where length() > 0 -> tgt.qualification as t_qualification then {

            // ahpraProfession-details 0..1
            src.qualification1_ahpraProfessionDetails_Profession_text as s_profession_text where length() > 0 -> t_qualification.extension as t_extension first then {
                s_profession_text -> t_extension.url = 'http://hl7.org.au/fhir/StructureDefinition/ahpraprofession-details',
                    t_extension.extension as t_ahpraProfession first then {
                        s_profession_text -> t_ahpraProfession.url = 'ahpraProfession',
                        t_ahpraProfession.value = create('CodeableConcept') as t_value then {
                            s_profession_text -> t_value.text = s_profession_text;
                        };
                    };
            };

            // identifier 0..* MS
            src.qualification1_identifier_value as s_value where length() > 0 -> t_qualification.identifier as t_identifier first then {
                s_value -> t_identifier.value = s_value;
                src.qualification1_identifier_system as s_system -> t_identifier.system = s_system;

                src.qualification1_identifier_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
                    s_type -> t_type.coding as t_coding first then {
                        s_type -> t_coding.code = s_type, 
                            t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
                        src.qualification1_identifier_type_display as s_display where length() > 0 -> t_coding.display = s_display;
                    };
                    src.qualification1_identifier_type_text as s_text where length() > 0 -> t_type.text = s_text;
                };
            };

            // code 1..1 MS
            s_qualification_code where length() > 0 or src.qualification1_code_text.length() > 0 -> t_qualification.code as t_code then {
                src.qualification1_code_system as s_system where length() > 0 -> t_code.coding = c(s_system, s_qualification_code) as t_coding first then { 
                    src.qualification1_code_display as s_display where length() > 0 -> t_coding.display = s_display;
                };
                src.qualification1_code_text as s_text where length() > 0 -> t_code.text = s_text;
            };

            //period 0..1 MS
            src.period_start as s_period_start where length() > 0 -> t_qualification.period as t_period then {
                s_period_start -> t_period.start = s_period_start;
            };

            //issuer 0..1 MS
            src.issuer_display as s_issuer where length() > 0 -> t_qualification.issuer as t_issuer then {
                s_issuer -> t_issuer.display = s_issuer;
            };
        };
    };
}