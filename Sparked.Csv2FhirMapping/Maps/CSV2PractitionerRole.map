map "http://example.org/StructureMap/CSV2PractitionerRole" = "CSV2PractitionerRole"

uses "http://example.org/StructureDefinition/PractitionerRoleCSV" as source
uses "http://hl7.org/fhir/StructureDefinition/PractitionerRole" as target

group ToPractitionerRole(source src : PractitionerRoleCSV, target tgt : PractitionerRole) {

    // id
    src.id as s_id where length() > 0 -> tgt.id = s_id;

    src -> tgt.meta = create('Meta') as meta then {
        src -> meta.profile = 'http://hl7.org.au/fhir/core/StructureDefinition/au-core-practitionerrole';
    };

    // identifier 0..* MS
    src.identifier1_dataAbsentReason as s_dataAbsent where length() > 0 -> tgt.identifier as t_identifier first then {
        s_dataAbsent -> t_identifier.extension as t_extension first then {
            s_dataAbsent -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
                t_extension.value = cast(s_dataAbsent, 'code');
        };
    };

    src.identifier1_value as s_value where length() > 0 -> tgt.identifier as t_identifier first then {
        s_value -> t_identifier.value = s_value;
        src.identifier1_system as s_system where length() > 0 -> t_identifier.system = s_system;

        src.identifier1_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
            s_type -> t_type.coding as t_coding first then {
                s_type -> t_coding.code = s_type, 
                    t_coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203';
                s_type where $this = 'UPIN' -> t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
                src.identifier1_type_system as s_type_system where length() > 0 -> t_coding.system = s_type_system;
                src.identifier1_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.identifier1_type_text as s_text where length() > 0 -> t_type.text = s_text;
        };

        src.identifier1_assigner_display as s_assigner where length() > 0 -> t_identifier.assigner as t_assigner then {
            s_assigner -> t_assigner.display = s_assigner;
        };
    };

    src.identifier2_value as s_value where length() > 0 -> tgt.identifier as t_identifier first then {
        s_value -> t_identifier.value = s_value;
        src.identifier2_system as s_system where length() > 0 -> t_identifier.system = s_system;

        src.identifier2_type_code as s_type where length() > 0 -> t_identifier.type as t_type then {
            s_type -> t_type.coding as t_coding first then {
                s_type -> t_coding.code = s_type, 
                    t_coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203';            
                s_type where $this = 'UPIN' -> t_coding.system = 'http://terminology.hl7.org.au/CodeSystem/v2-0203';
                src.identifier2_type_system as s_type_system where length() > 0 -> t_coding.system = s_type_system;
                src.identifier2_type_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
            src.identifier2_type_text as s_text where length() > 0 -> t_type.text = s_text;
        };

        src.identifier2_assigner_display as s_assigner where length() > 0 -> t_identifier.assigner as t_assigner then {
            s_assigner -> t_assigner.display = s_assigner;
        };
    };

    // active 0..1
    src.active as s_active where length() > 0 -> tgt.active = s_active;

    //period 0..1
    src.period_start as s_period_start where length() > 0 -> tgt.period as t_period then {
        s_period_start -> t_period.start = s_period_start;
        src.period_end as s_period_end where length() > 0 -> t_period.end = s_period_end;
    };


    // practitioner 1..1 MS
    src.practitioner_reference_id as s_reference_id where length() > 0 -> tgt.practitioner as t_practitioner then {
        s_reference_id where length() > 0 -> t_practitioner.reference = append('Practitioner/', s_reference_id);
        src.practitioner_display as s_display where length() > 0 -> t_practitioner.display = s_display;
    };

    // practitioner missing
    src.practitioner_reference_id where length() = 0 -> tgt.practitioner as t_practitioner then {
        src -> t_practitioner.extension as t_extension first then {
            src -> t_extension.url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason',
            t_extension.value = cast('unknown', 'code');
      };
    };

    // organization 0..1 MS
    src.organization_reference_id as s_reference_id where length() > 0 -> tgt.organization as t_organization then {
        s_reference_id -> t_organization.reference = append('Organization/', s_reference_id);
        src.organization_display as s_display where length() > 0 -> t_organization.display = s_display;
    };

    src.organization_reference as s_reference where length() > 0 -> tgt.organization as t_organization then {
        s_reference -> t_organization.reference = s_reference;
        src.organization_display as s_display where length() > 0 -> t_organization.display = s_display;
    };

    // code 0..* MS
    src.code1_coding1_code as s_code where length() > 0 -> tgt.code as t_code then {
        src.code1_coding1_system as s_system -> t_code.coding = c(s_system, s_code) as t_coding first then {
            src.code1_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.code1_coding2_code as s_code where length() > 0 -> t_code then {
            src.code1_coding2_system as s_system -> t_code.coding = c(s_system, s_code) as t_coding first then {
                src.code1_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };
        src.code1_coding3_code as s_code where length() > 0 -> t_code then {
            src.code1_coding3_system as s_system -> t_code.coding = c(s_system, s_code) as t_coding first then {
                src.code1_coding3_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };
        src.code1_text as s_text where length() > 0 -> t_code.text = s_text;
    };

    // specialty 0..* MS
    src.specialty1_coding1_code as s_specialty where length() > 0 -> tgt.specialty as t_specialty then {
        src.specialty1_coding1_system as s_system -> t_specialty.coding = c(s_system, s_specialty) as t_coding first then {
            src.specialty1_coding1_display as s_display where length() > 0 -> t_coding.display = s_display;
        };
        src.specialty1_coding2_code as s_code where length() > 0 -> t_specialty then {
            src.specialty1_coding2_system as s_system -> t_specialty.coding = c(s_system, s_code) as t_coding first then {
                src.specialty1_coding2_display as s_display where length() > 0 -> t_coding.display = s_display;
            };
        };
        src.specialty1_text as s_text where length() > 0 -> t_specialty.text = s_text;
    };

    // location 0..* MS
    src.location_reference_id as s_reference_id where length() > 0 -> tgt.location as t_location first then {
        s_reference_id -> t_location.reference = append('Location/', s_reference_id);
        src.location_display as s_display where length() > 0 -> t_location.display = s_display;
    };

    src.location_reference as s_reference where length() > 0 -> tgt.location as t_location then {
        s_reference -> t_location.reference = s_reference;
        src.location_display as s_display where length() > 0 -> t_location.display = s_display;
    };

    // healthcareService 0..* MS
    src.healthcareService_reference_id as s_reference_id where length() > 0 -> tgt.healthcareService as t_healthcareService first then {
        s_reference_id -> t_healthcareService.reference = append('HealthcareService/', s_reference_id);
        src.healthcareService_display as s_display where length() > 0 -> t_healthcareService.display = s_display;
    };

    src.healthcareService_reference as s_reference where length() > 0 -> tgt.healthcareService as t_healthcareService then {
        s_reference -> t_healthcareService.reference = s_reference;
        src.healthcareService_display as s_display where length() > 0 -> t_healthcareService.display = s_display;
    };

    // telecom 0..* MS
    src.telecom1_value as s_telecom_value where length() > 0 -> tgt.telecom as t_telecom first then {
        s_telecom_value -> t_telecom.value = s_telecom_value; 
        src.telecom1_use as s_use where length() > 0 -> t_telecom.use = s_use;
        src.telecom1_system as s_system where length() > 0 -> t_telecom.system = s_system;
    };

    src.telecom2_value as s_telecom_value where length() > 0 -> tgt.telecom as t_telecom first then {
        s_telecom_value -> t_telecom.value = s_telecom_value; 
        src.telecom2_use as s_use where length() > 0 -> t_telecom.use = s_use;
        src.telecom2_system as s_system where length() > 0 -> t_telecom.system = s_system;
    };

    // availableTime 0..*
    src.availableTime1_daysOfWeek1 as s_daysOfWeek where length() > 0 -> tgt.availableTime as t_availableTime then {
        // daysOfWeek 0..*
        s_daysOfWeek -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime1_daysOfWeek2 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime1_daysOfWeek3 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime1_daysOfWeek4 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime1_daysOfWeek5 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;

        src.availableTime1_availableStartTime as s_availableStartTime where length() > 0 -> t_availableTime.availableStartTime = s_availableStartTime;
        src.availableTime1_availableEndTime as s_availableEndTime where length() > 0 -> t_availableTime.availableEndTime = s_availableEndTime;
    };

    src.availableTime2_daysOfWeek1 as s_daysOfWeek where length() > 0 -> tgt.availableTime as t_availableTime then {
        // daysOfWeek 0..*
        s_daysOfWeek -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime2_daysOfWeek2 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime2_daysOfWeek3 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime2_daysOfWeek4 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;
        src.availableTime2_daysOfWeek5 as s_daysOfWeek where length() > 0 -> t_availableTime.daysOfWeek = s_daysOfWeek;

        src.availableTime2_availableStartTime as s_availableStartTime where length() > 0 -> t_availableTime.availableStartTime = s_availableStartTime;
        src.availableTime2_availableEndTime as s_availableEndTime where length() > 0 -> t_availableTime.availableEndTime = s_availableEndTime;
    };

    // notAvailable 0..*
    src.notAvailable1_description as s_description where length() > 0 -> tgt.notAvailable as t_notAvailable then {
        // description 1..1
        s_description -> t_notAvailable.description = s_description;

        src.notAvailable1_during_start as s_during_start where length() > 0 -> t_notAvailable.during as t_during then {
            s_during_start -> t_during.start = s_during_start;
            src.notAvailable1_during_end as s_during_end where length() > 0 -> t_during.end = s_during_end;
        };
    };

    // availabilityExceptions 0..1
    src.availabilityExceptions as s_availabilityExceptions where length() > 0 -> tgt.availabilityExceptions = s_availabilityExceptions;
}